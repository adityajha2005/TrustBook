import { IBitcoinProvider } from '../provider.interface';

export type GuardianCreateWallet = {
    wallet_address: string;
    guardian_public_key: string;
};
export declare const GuardianWalletStatus: {
    WalletStatusReady: number;
    WalletStatusFundingNonEmpty: number;
};
export type GuardianWallet = {
    wallet_address: string;
    user_public_key: string;
    guardian_public_key: string;
    status: number;
    funding_utxo: GuardianUTXO | null;
    redeem_tx: GuardianRedeemTx | null;
};
export type GuardianRedeemTx = {
    tx_hash: string;
    raw: string;
    user_signature: string;
    guardian_signature: string;
};
export type GuardianWalletOpts = {
    provider: IBitcoinProvider;
    privateKey: string;
    guardianApiUrl?: string;
    pkIndex?: number;
    pkPath?: string;
};
export type GuardianUTXO = {
    tx_hash: string;
    tx_index: number;
    tx_amount: number;
    refund_wait_block: number;
    refund_secret: string;
    Refund_secret_hash: string;
    refund_raw_tx: string;
    refund_guardian_signature: string;
};
export type GuardianRefundRequest = {
    wallet_address: string;
    secret_hash: string;
    utxo_hash: string;
    utxo_index: number;
    utxo_amount: number;
    deposit_tx?: string;
};
export type GuardianRefundResponse = {
    wait_block: number;
    raw_tx: string;
    refund_guardian_signature: string;
    deposit_guardian_signature: string;
};
export type GuardianDepositRequest = {
    wallet_address: string;
    secret_hash: string;
    raw_funding_tx: string;
};
export type GuardianBtcSendRequest = {
    wallet_address: string;
    send_tx: string;
    secret_hash: string | undefined;
};
export type GuardianBtcSendResponse = {
    guardian_signature: string;
};
export type GuardianCommitmentRequest = {
    wallet_address: string;
    tx_hash: string;
    secret: string;
};
export type GuardianCommitmentResponse = {
    commitment: {
        Value: string;
    };
};
