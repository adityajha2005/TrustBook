import{JsonRpcApiProvider as t}from"ethers";import{AbstractEVMWallet as i}from"./index19.js";class n extends i{constructor(r){if(!r.provider)throw new Error("Signer must have a provider");super(),this.signer=r}sign(r){return this.signer.signMessage(r)}async contractCall(r){return this.signer.sendTransaction(await this.signer.populateTransaction({...r,from:r.from||await this.getAddress()}))}getAddress(){return this.signer.getAddress()}getProvider(){if(!this.signer.provider)throw new Error("Signer must have a provider");return this.signer.provider}async rpc(r,s){const e=this.getProvider();if(e instanceof t)return e.send(r,s);throw new Error("provider not supported. Must be instance of JsonRpcApiProvider")}async signTypedData(r,s,e){return this.signer.signTypedData(r,s,e)}getSigner(){return this.signer}}export{n as EVMWallet};
