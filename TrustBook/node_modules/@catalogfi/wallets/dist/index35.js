import{bytes as c}from"./index33.js";/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */const i=t=>new DataView(t.buffer,t.byteOffset,t.byteLength),a=(t,n)=>t<<32-n|t>>>n,u=(t,n)=>t<<n|t>>>32-n>>>0;new Uint8Array(new Uint32Array([287454020]).buffer)[0];function e(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function o(t){return typeof t=="string"&&(t=e(t)),c(t),t}class f{clone(){return this._cloneInto()}}const b={}.toString;function p(t,n){if(n!==void 0&&b.call(n)!=="[object Object]")throw new Error("Options should be object or undefined");return Object.assign(t,n)}function w(t){const n=s=>t().update(o(s)).digest(),r=t();return n.outputLen=r.outputLen,n.blockLen=r.blockLen,n.create=()=>t(),n}export{f as Hash,p as checkOpts,i as createView,u as rotl,a as rotr,o as toBytes,e as utf8ToBytes,w as wrapConstructor};
